const char* src = R"src(__qpu__ kernel_0(qbit qreg, double theta0, double theta1){
cbit creg[1];
H(qreg[2]);
Rx(qreg[0],-1.5708);
CNOT(qreg[0],qreg[1]);
CNOT(qreg[1],qreg[2]);
Rz(qreg[2], theta0);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[0],qreg[1]);
H(qreg[2]);
Rx(qreg[0],1.5708);
Rx(qreg[2],-1.5708);
H(qreg[0]);
CNOT(qreg[0],qreg[1]);
CNOT(qreg[1],qreg[2]);
Rz(qreg[2],theta0);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[0],qreg[1]);
Rx(qreg[2],1.5708);
H(qreg[0]);
H(qreg[3]);
Rx(qreg[1],-1.5708);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[2],qreg[3]);
Rz(qreg[3],theta0);
CNOT(qreg[2],qreg[3]);
CNOT(qreg[1],qreg[2]);
H(qreg[3]);
Rx(qreg[1],1.5708);
Rx(qreg[3],-1.5708);
H(qreg[1]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[2],qreg[3]);
Rz(qreg[3],theta0);
CNOT(qreg[2],qreg[3]);
CNOT(qreg[1],qreg[2]);
Rx(qreg[3],1.5708);
H(qreg[1]);
H(qreg[3]);
Rx(qreg[2],-1.5708);
Rx(qreg[1],-1.5708);
Rx(qreg[0],-1.5708);
CNOT(qreg[0],qreg[1]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[2],qreg[3]);
Rz(qreg[3],theta1);
CNOT(qreg[2],qreg[3]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[0],qreg[1]);
H(qreg[3]);
Rx(qreg[2],1.5708);
Rx(qreg[1],1.5708);
Rx(qreg[0],1.5708);
Rx(qreg[3],-1.5708);
Rx(qreg[2],-1.5708);
H(qreg[1]);
Rx(qreg[0],-1.5708);
CNOT(qreg[0],qreg[1]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[2],qreg[3]);
Rz(qreg[3],theta1);
CNOT(qreg[2],qreg[3]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[0],qreg[1]);
Rx(qreg[3],1.5708);
Rx(qreg[2],1.5708);
H(qreg[1]);
Rx(qreg[0],1.5708);
H(qreg[3]);
Rx(qreg[2],-1.5708);
H(qreg[1]);
H(qreg[0]);
CNOT(qreg[0],qreg[1]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[2],qreg[3]);
Rz(qreg[3],theta1);
CNOT(qreg[2],qreg[3]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[0],qreg[1]);
H(qreg[3]);
Rx(qreg[2],1.5708);
H(qreg[1]);
H(qreg[0]);
Rx(qreg[3],-1.5708);
Rx(qreg[2],-1.5708);
Rx(qreg[1],-1.5708);
H(qreg[0]);
CNOT(qreg[0],qreg[1]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[2],qreg[3]);
Rz(qreg[3],theta1);
CNOT(qreg[2],qreg[3]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[0],qreg[1]);
Rx(qreg[3],1.5708);
Rx(qreg[2],1.5708);
Rx(qreg[1],1.5708);
H(qreg[0]);
H(qreg[3]);
H(qreg[2]);
H(qreg[1]);
Rx(qreg[0],-1.5708);
CNOT(qreg[0],qreg[1]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[2],qreg[3]);
Rz(qreg[3],theta1);
CNOT(qreg[2],qreg[3]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[0],qreg[1]);
H(qreg[3]);
H(qreg[2]);
H(qreg[1]);
Rx(qreg[0],1.5708);
Rx(qreg[3],-1.5708);
H(qreg[2]);
Rx(qreg[1],-1.5708);
Rx(qreg[0],-1.5708);
CNOT(qreg[0],qreg[1]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[2],qreg[3]);
Rz(qreg[3],theta1);
CNOT(qreg[2],qreg[3]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[0],qreg[1]);
Rx(qreg[3],1.5708);
H(qreg[2]);
Rx(qreg[1],1.5708);
Rx(qreg[0],1.5708);
H(qreg[3]);
H(qreg[2]);
Rx(qreg[1],-1.5708);
H(qreg[0]);
CNOT(qreg[0],qreg[1]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[2],qreg[3]);
Rz(qreg[3],theta1);
CNOT(qreg[2],qreg[3]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[0],qreg[1]);
H(qreg[3]);
H(qreg[2]);
Rx(qreg[1],1.5708);
H(qreg[0]);
Rx(qreg[3],-1.5708);
H(qreg[2]);
H(qreg[1]);
H(qreg[0]);
CNOT(qreg[0],qreg[1]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[2],qreg[3]);
Rz(qreg[3],theta1);
CNOT(qreg[2],qreg[3]);
CNOT(qreg[1],qreg[2]);
CNOT(qreg[0],qreg[1]);
Rx(qreg[3],1.5708);
H(qreg[2]);
H(qreg[1]);
H(qreg[0]);
creg[0] = MeasZ(qreg[0]);
}

//__qpu__ kernel_1(qbit qreg, double theta0, double theta1){
//H(qreg[2]);
//H(qreg[1]);
//H(qreg[0]);
//}
)src";